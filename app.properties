#IP of SMSC
smscHostTransmitter=
#Port of SMSC
smscPortTransmitter=
#Username of SMSC account 
smscSystemIDTransmitter=
#Password of SMSC account
smscPasswordTransmitter=
#1 for Transmitter, 2 for Receiver, 3 for Transceiver 
smscaccMode=
smscInterfaceVersion=
smscSystemType=
smscSourceTON=
smscSourceNPI=
smscAddressRange=
smsMaxLen=
smsMaxLenSplitMessage=
smsMaxLenUnicode=
smsMaxLenSplitMessageUni=
transmitterDelayPerSplitMessage=

sentLogEnabled=

#transmitterFetchInterval denotes interval(milliseconds) of consecutive Fetching concurrent rows from DB & send Msg to SMSC
transmitterFetchInterval=

#rxinsertQuery=insert into inbox(Sender,Receiver,Message,SMSCMsgID) values ('@Sender','@Receiver','@Message',@SMSCMsgID)
rxinsertQuery=

#TransmitterFetchQuery expect column Id(int),Sender(varchar),Receiver(varchar),Message(varchar),WAPURL(varchar),SMSType(int)
#This SP should return the number of rows which equals to your TPS.  
transmitterFetchQuery=
 

transmitterFetchQuerySP =
#updateOnSentQuery for Update the Outbox table row with status 4(success),-1(fail) after tx send the msg to SMSC.
updateOnSentQuery=

#updateOnSubmitResponseQuery for update the Outbox table row with status 1(success),-1(failed). If status=-1  then Errorcode denotes the actual cause of fail
updateOnSubmitResponseQuery=

###insert into OUTBOX_STATUS(id,SENDER,RECEIVER,CAMPAIGN_ID,SMSC_MSGID,STATUS,ERROR_CODE,DELIVERY_TIME) VALUES(@Id,'@SENDER@','@RECEIVER@','@CAMPAIGN_ID@' ,'@SMSCMsgId', @status, @ErrorCode,sysdate)

#threadCount denotes concurrent send msg to SMSC
threadCount=150

#enquireInterval denotes the interval(seconds) of Sending Enquire Msg 
enquireInterval=25
#reconnectInterval denotes the interval(seconds) of trying Reconnect with SMSC after unbound
reconnectInterval=1

#log related
logDirectory=

#Database related

dbType=Oracle

#dbserver=
#dbuser=
#dbpassword=
#database=

database.hostName=
database.systemId=
database.password=
database.dbname=
database.port=
